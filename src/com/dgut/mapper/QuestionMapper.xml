<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dgut.mapper.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.dgut.bean.Question" >
    <id column="qid" property="qid" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="questiontype_id" property="questiontypeId" jdbcType="BIGINT" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="slelects" property="slelects" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="analysis" property="analysis" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeId" jdbcType="VARCHAR" />
    <result column="difficulty" property="difficulty" jdbcType="VARCHAR" />
    <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    qid, course_id, questiontype_id, question, slelects, answer, analysis, knowledge_id, 
    difficulty, image_path, create_date, modify_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dgut.bean.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from question
    where qid = #{qid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from question
    where qid = #{qid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgut.bean.QuestionExample" >
    delete from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dgut.bean.Question" >
    insert into question (qid, course_id, questiontype_id, 
      question, slelects, answer, 
      analysis, knowledge_id, difficulty, 
      image_path, create_date, modify_date
      )
    values (#{qid,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{questiontypeId,jdbcType=BIGINT}, 
      #{question,jdbcType=VARCHAR}, #{slelects,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{analysis,jdbcType=VARCHAR}, #{knowledgeId,jdbcType=VARCHAR}, #{difficulty,jdbcType=VARCHAR}, 
      #{imagePath,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dgut.bean.Question" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="qid != null" >
        qid,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="questiontypeId != null" >
        questiontype_id,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="slelects != null" >
        slelects,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="analysis != null" >
        analysis,
      </if>
      <if test="knowledgeId != null" >
        knowledge_id,
      </if>
      <if test="difficulty != null" >
        difficulty,
      </if>
      <if test="imagePath != null" >
        image_path,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="qid != null" >
        #{qid,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="questiontypeId != null" >
        #{questiontypeId,jdbcType=BIGINT},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="slelects != null" >
        #{slelects,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null" >
        #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null" >
        #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null" >
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgut.bean.QuestionExample" resultType="java.lang.Integer" >
    select count(*) from question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question
    <set >
      <if test="record.qid != null" >
        qid = #{record.qid,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.questiontypeId != null" >
        questiontype_id = #{record.questiontypeId,jdbcType=BIGINT},
      </if>
      <if test="record.question != null" >
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.slelects != null" >
        slelects = #{record.slelects,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.analysis != null" >
        analysis = #{record.analysis,jdbcType=VARCHAR},
      </if>
      <if test="record.knowledgeId != null" >
        knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null" >
        difficulty = #{record.difficulty,jdbcType=VARCHAR},
      </if>
      <if test="record.imagePath != null" >
        image_path = #{record.imagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question
    set qid = #{record.qid,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      questiontype_id = #{record.questiontypeId,jdbcType=BIGINT},
      question = #{record.question,jdbcType=VARCHAR},
      slelects = #{record.slelects,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      analysis = #{record.analysis,jdbcType=VARCHAR},
      knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=VARCHAR},
      image_path = #{record.imagePath,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgut.bean.Question" >
    update question
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="questiontypeId != null" >
        questiontype_id = #{questiontypeId,jdbcType=BIGINT},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="slelects != null" >
        slelects = #{slelects,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null" >
        analysis = #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null" >
        difficulty = #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null" >
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where qid = #{qid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgut.bean.Question" >
    update question
    set course_id = #{courseId,jdbcType=BIGINT},
      questiontype_id = #{questiontypeId,jdbcType=BIGINT},
      question = #{question,jdbcType=VARCHAR},
      slelects = #{slelects,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      analysis = #{analysis,jdbcType=VARCHAR},
      knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=VARCHAR},
      image_path = #{imagePath,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where qid = #{qid,jdbcType=BIGINT}
  </update>
</mapper>